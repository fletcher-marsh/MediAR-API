{
  "swagger": "2.0",
  "info": {
    "description": "This is a simple API written in Node.js for the MediAR iOS app.",
    "version": "1.0.0",
    "title": "MediAR-API"
  },
  "host": "localhost:3000",
  "basePath": "/api",
  "tags": [
    {
      "name": "scans",
      "description": "Records of every user-entered scan"
    },
    {
      "name": "events",
      "description": "Records of every event entered by coordinators"
    }
  ],
  "paths": {
    "/scans": {
      "post": {
        "tags": [
          "scans"
        ],
        "summary": "Add a new scan to the app",
        "description": "",
        "operationId": "addScan",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Scan object that needs to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Scan"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": [
          "scans"
        ],
        "summary": "See all scans",
        "description": "",
        "operationId": "allScans",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Scans"
            }
          }
        }
      }
    },
    "/scans/id": {
      "get": {
        "tags": [
          "scans"
        ],
        "summary": "Find scan by ID",
        "description": "Returns a single scan",
        "operationId": "getScanById",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "scanId",
            "in": "path",
            "description": "ID of scan to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Scans"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Scan not found"
          }
        }
      },
      "put": {
        "tags": [
          "scans"
        ],
        "summary": "Update an existing scan",
        "description": "",
        "operationId": "updateScan",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Scan object that needs to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Scans"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Scan not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "scans"
        ],
        "summary": "Deletes a scan",
        "description": "",
        "operationId": "deleteScan",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "scanId",
            "in": "path",
            "description": "Scan id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Scan not found"
          }
        }
      }
    },



    "/events": {
      "post": {
        "tags": [
          "events"
        ],
        "summary": "Add a new event to the app",
        "description": "",
        "operationId": "addEvent",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Event object that needs to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Event"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": [
          "events"
        ],
        "summary": "See all events",
        "description": "",
        "operationId": "allEvents",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ]
      }
    },
    "/events/id": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Find event by ID",
        "description": "Returns a single event",
        "operationId": "getEventById",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "ID of event to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Events"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Event not found"
          }
        }
      },
      "put": {
        "tags": [
          "events"
        ],
        "summary": "Update an existing event",
        "description": "",
        "operationId": "updateEvent",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Event object that needs to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Events"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Event not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "events"
        ],
        "summary": "Deletes a event",
        "description": "",
        "operationId": "deleteEvent",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "Event id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Event not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Scan": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "loc": {
          "type": "string"
        },
        "lat": {
          "type": "number",
          "format": "double"
        },
        "long": {
          "type": "number",
          "format": "double"
        },
        "media": {
          "type": "string"
        },
        "time": {
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "Scan"
      }
    },
    "Event": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "loc": {
          "type": "string"
        },
        "lat": {
          "type": "number",
          "format": "double"
        },
        "long": {
          "type": "number",
          "format": "double"
        },
        "media": {
          "type": "string"
        },
        "preview": {
          "type": "string"
        },
        "desc": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Event"
      }
    }
  }
}